<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="redacoes_historico.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="0"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2465"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="redacoes" custom_title="0" dock_id="1" table="4,8:mainredacoes"/><dock_state state="000000ff00000000fd0000000100000002000005ab00000390fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000005ab0000012400ffffff0000026f0000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="redacoes" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="35"/><column index="2" value="49"/><column index="3" value="300"/><column index="4" value="87"/><column index="5" value="300"/><column index="6" value="106"/><column index="7" value="116"/><column index="8" value="57"/><column index="9" value="57"/><column index="10" value="57"/><column index="11" value="57"/><column index="12" value="57"/><column index="13" value="164"/><column index="14" value="105"/><column index="15" value="105"/><column index="16" value="105"/><column index="17" value="105"/><column index="18" value="105"/><column index="19" value="171"/><column index="20" value="112"/><column index="21" value="112"/><column index="22" value="112"/><column index="23" value="112"/><column index="24" value="112"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">-- SQL para migração de dados de uma tabela denormalizada para um esquema normalizado
-- Execute este script APENAS UMA VEZ no seu banco de dados denormalizado.

-- 1. Criar as novas tabelas normalizadas com nomes temporários
CREATE TABLE IF NOT EXISTS redacoes_novo (
    RedacaoID INTEGER PRIMARY KEY,
    TITULO TEXT,
    TEMA TEXT,
    DATA TEXT,
    TEXTO_REDACAO TEXT,
    FEEDBACK_GERAL TEXT
);

CREATE TABLE IF NOT EXISTS corretores (
    CorretorID INTEGER PRIMARY KEY,
    NomeCorretor TEXT UNIQUE
);

CREATE TABLE IF NOT EXISTS avaliacoes (
    AvaliacaoID INTEGER PRIMARY KEY,
    RedacaoID INTEGER NOT NULL,
    CorretorID INTEGER NOT NULL,
    NOTA_TOTAL INTEGER,
    C1 INTEGER, C2 INTEGER, C3 INTEGER, C4 INTEGER, C5 INTEGER,
    FOREIGN KEY (RedacaoID) REFERENCES redacoes_novo(RedacaoID) ON DELETE CASCADE,
    FOREIGN KEY (CorretorID) REFERENCES corretores(CorretorID) ON DELETE CASCADE,
    UNIQUE (RedacaoID, CorretorID)
);

-- 2. Popular a tabela 'corretores' (INSERT OR IGNORE evita duplicatas se o script for executado mais de uma vez)
INSERT OR IGNORE INTO corretores (NomeCorretor) VALUES
('CRIA'),
('CORREDACAO'),
('TODAMATERIA');

-- 3. Migrar os dados da tabela antiga para a nova estrutura
-- 3a. Migrar dados principais da redação
-- NOTA: O ID é gerado automaticamente na nova tabela.
INSERT INTO redacoes_novo (TEMA, TITULO, DATA, TEXTO_REDACAO, FEEDBACK_GERAL)
SELECT TEMA, TITULO, DATA, TEXTO_REDACAO, FEEDBACK_GERAL FROM redacoes;

-- 3b. Migrar os dados de avaliação, fazendo o &quot;desempilhamento&quot; via SQL
-- Usamos um JOIN para casar os dados da tabela antiga com a nova tabela de redações recém-populada
-- O CorretorID é fornecido como um valor literal (1=CRIA, 2=CORREDACAO, etc.)
INSERT INTO avaliacoes (RedacaoID, CorretorID, NOTA_TOTAL, C1, C2, C3, C4, C5)
SELECT
    rn.RedacaoID,
    1, -- CorretorID para CRIA
    r.NOTA_TOTAL_CRIA, r.C1_CRIA, r.C2_CRIA, r.C3_CRIA, r.C4_CRIA, r.C5_CRIA
FROM
    redacoes r
INNER JOIN
    redacoes_novo rn ON r.TEMA = rn.TEMA AND r.DATA = rn.DATA
WHERE
    r.NOTA_TOTAL_CRIA IS NOT NULL; -- Apenas migra se a nota existir

INSERT INTO avaliacoes (RedacaoID, CorretorID, NOTA_TOTAL, C1, C2, C3, C4, C5)
SELECT
    rn.RedacaoID,
    2, -- CorretorID para CORREDACAO
    r.NOTA_TOTAL_CORREDACAO, r.C1_CORREDACAO, r.C2_CORREDACAO, r.C3_CORREDACAO, r.C4_CORREDACAO, r.C5_CORREDACAO
FROM
    redacoes r
INNER JOIN
    redacoes_novo rn ON r.TEMA = rn.TEMA AND r.DATA = rn.DATA
WHERE
    r.NOTA_TOTAL_CORREDACAO IS NOT NULL;

INSERT INTO avaliacoes (RedacaoID, CorretorID, NOTA_TOTAL, C1, C2, C3, C4, C5)
SELECT
    rn.RedacaoID,
    3, -- CorretorID para TODAMATERIA
    r.NOTA_TOTAL_TODAMATERIA, r.C1_TODAMATERIA, r.C2_TODAMATERIA, r.C3_TODAMATERIA, r.C4_TODAMATERIA, r.C5_TODAMATERIA
FROM
    redacoes r
INNER JOIN
    redacoes_novo rn ON r.TEMA = rn.TEMA AND r.DATA = rn.DATA
WHERE
    r.NOTA_TOTAL_TODAMATERIA IS NOT NULL;

-- 4. Finalizar: Apagar tabela antiga e renomear a nova
DROP TABLE redacoes;
ALTER TABLE redacoes_novo RENAME TO redacoes;</sql><current_tab id="0"/></tab_sql></sqlb_project>
